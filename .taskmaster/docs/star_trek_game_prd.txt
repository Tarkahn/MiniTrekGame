Star Trek Tactical Game - Product Requirements Document (PRD)

1. Game Overview

A retro-inspired tactical simulation game in the Star Trek universe.

Turn-based gameplay with real-time elements.

Two navigation layers: Sector Map (galactic-level) and System Map (local-level).

2. Core Mechanics

2.1. Ship Systems Overview

All ship systems follow these standards:

Integrity-based systems (e.g., Hull, Shields, Sensors): 0–100 scale

Power-allocation systems (e.g., Phasers, Shields, Impulse Engines): 0–9 power scale

Warp Core (energy reservoir): Stores up to 1,000 units of energy

2.2. Energy Usage

Movement: 10 units per sector hex traveled (warp) + 20 units to initiate warp

Shield regeneration: 10 units/minute real-time while idle or activated by player

Phasers: 5 units per shot, with 10s real-time cooldown

Torpedoes: 1 torpedo per shot; damage not affected by range

Scans:

Short-range: 5 energy units

Long-range: 20 energy units

2.3. Ship Damage & Combat

Damage applies to Hull or system integrity (0–100)

Shields absorb damage based on power level:

Each shield level absorbs 10 units of incoming damage per attack

For example, shield power level 5 absorbs up to 50 damage per attack

Any damage above this value passes through to the hull or subsystems

Critical Hits (crits): 10% base chance if shields are down, disabling random systems

Disabled systems = unusable until docked at starbase (instant repair)

2.4. Sensors and Scans

Short-Range Scan:

Reveals all objects in current system hex

Accurate and detailed (ships, anomalies, planets, starbases, etc.)

Cost: 5 energy units

Long-Range Scan:

Displays 3x3 sector hexes surrounding current sector

Summary flags: E (Enemy), S (Starbase), A (Anomaly), etc.

Center of grid is player's current sector

Cost: 20 energy units

3. Navigation & Movement

3.1. Map Structure

Sector Map: 20×20 hex grid representing the galaxy

System Map: Detailed local hex grid per sector hex

3.2. Sector Travel Mechanics

3.2.1. Local Sector Movement (System Edge Transition)

Triggered by moving to edge hex of current System Map

Transitions to adjacent sector

Full turn consumed

Visual cue/animation shown

Player enters new system on opposite edge

3.2.2. Warp Travel (Direct Sector Jump)

Player selects a distant sector from Sector Map

Ship enters warp mode and travels across Sector Map

Consumes 1 turn and energy per sector hex traveled

Arrival triggers system map reveal of destination

No need for edge-based movement through intermediate sectors

Player sees ship smoothly animate from current hex to destination hex

3.2.3. Boundary Limitations

Player cannot move outside edges of Sector Map

In System Map, moving to edge implies travel to adjacent sector

4. Victory & Defeat Conditions

4.1. Default Objective

Seek and destroy all Klingon ships across the galaxy

All Klingon ships generated at the start of the game must be eliminated to win

4.2. Loss Conditions

Player ship destroyed (Hull = 0)

Life support destroyed (Integrity = 0)

Player surrenders (manually triggered)

Turn limit exceeded: Default limit is 1,000 turns, as set in constants.py

A warning system activates at turn 900, notifying the player of "100 turns remaining" and continues countdown alerts every 50, then every 10 turns.

If turn 1,001 begins without the mission completed, the game ends in defeat.

5. Code Architecture (Cursor Project)

5.1. Ship Class Structure

base_ship.py: common logic for all ships

player_ship.py, enemy_ship.py: extend base ship

ship_systems/: Contains phasers.py, shields.py, torpedoes.py, sensors.py, etc.

Composition-based: ships contain instances of system classes, not inheritance

5.2. Folder Structure

game_logic/: combat, turns, energy, damage, win/loss

ui/: map rendering, text log, LCARS buttons, player input

data/: constants.py, enemy ship definitions, object data

galaxy_generation/: sector map, system map, anomalies

event_system/: anomalies, docking, special encounters

5.3. constants.py

All values in this file are configurable to allow for gameplay balancing, difficulty adjustments, or modding support.

MAX_TURNS = 1000

STARTING_ENERGY = 1000

SHIELD_REGEN_RATE = 10 # per real-time minute

WARP_ENERGY_COST = 10 # per sector hex

SHIELD_ABSORPTION_PER_LEVEL = 10

PHASER_COOLDOWN_SECONDS = 10

KLINGON_DISRUPTOR_DAMAGE_MIN = 30

KLINGON_DISRUPTOR_DAMAGE_MAX = 50

Additional tunable values

6. Real-Time Mechanics

Note: Not all systems are affected by real-time mechanics. For example, movement, scanning, and enemy actions are strictly turn-based.

Shield regeneration and phaser cooldowns operate on real-time clocks, not turn counts.

Shield regen only occurs when player chooses (e.g. via button or command) and not in combat.

Real-time mechanics add pacing and urgency within turn-based framework.

7. Visual Interface

Top: 20×20 hex map display (system or sector)

Bottom Left: Scrollable log/information box

Bottom Right: LCARS-style controls:

Number pad input

Fire Phasers, Fire Torpedoes, Engage, Scan

Room for additional buttons

8. Combat Balance Notes

Klingon Disruptors:

Deal 30–50 damage per shot

~80% accuracy at close range; drops with distance

Fire rate: 1 shot per turn

Player Defense:

Shields at level 5 absorb 50 damage

Smart shield usage can fully negate some attacks

Mismanagement can result in crits or direct Hull hits

Shield absorption works on a flat damage model: Each shield level absorbs 10 units of damage per attack

Any remaining damage after shield absorption is passed through to ship systems or Hull

Goal: Ensure tactical challenge without overwhelming difficulty

Phaser Range Mechanics:

Max Range: 9 hexes

Damage Formula: (Power Level × 10) − (Distance × 3)

If target is beyond 9 hexes, phaser cannot fire

No negative or zero-damage shots occur beyond max range 